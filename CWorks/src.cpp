/* 
***************************************************************************
*			Семенков Даниил Ильич|Группа 425|Вариант 24|				  *
***************************************************************************
Контрольная работа № 1. Инкапсуляция. Классы в С++ и средства их построения.
Вариант 10
	Клиент: фамилия, имя, отчество, адрес, телефон, номер карты, номер
	банковского счета. Создать массив объектов. Реализовать возможность
	получения:
	– списка клиентов в алфавитном порядке,
	– списка клиентов, номер карты которых находится в заданном интервале.

Контрольная работа №2. Наследование.
Вариант 11
	Базовый класс – личность; поля – фамилия, пол, адрес. Производный класс –
	сотрудник университета.

Контрольная работа № 3. Полиморфизм.
Вариант 24
	Представить матрицу, «окрашенную» наподобие шахматной доски.
	Упорядочить элементы на белых клетках по возрастанию по строкам, на
	черных – по убыванию по столбцам.

Контрольная работа № 4. Классы потоков ввода-вывода.
Вариант 6
	Найти в тексте все повторяющиеся подстроки длиннее заданной
	пользователем величины (например, длиннее пяти символов). Заменить все
	вхождения подстроки кроме первого специальной сигнатурой: {индекс
	первого символа оригинальной строки, длина цепочки}. Перед заменой
	убедиться, что в тексте нет комбинаций символов, которые могут ошибочно
	восприниматься как формируемая сигнатура. Предусмотреть режим
	восстановления оригинального текста. Пример: текст «тестовая строка»
	должен быть заменен на текст «тестовая {3, 2}рока» при условии, что
	рассматриваются подстроки, начиная с длины в два символа.
*/

#include "input.h"
#include "start.h"
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <Windows.h>


int main(void) 
{
	srand(static_cast<unsigned int>(time(NULL)));
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	ShowAuthor();
	for (;;)
	{
		ShowMainMenu();
		switch (int user_choice = GetKey(CW1, CW4))
		{
			case CW1:
				StartCW1();
				break;

			case CW2:			
				StartCW2();
				break;

			case CW3:		
				StartCW3();
				break;

			case CW4:
				StartCW4();
				break;

			case QUIT:
				exit(EXIT_SUCCESS);
		}
	}
}
